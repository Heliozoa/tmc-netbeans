package fi.helsinki.cs.tmc.ui;

import fi.helsinki.cs.tmc.actions.ShowSettingsAction;
import fi.helsinki.cs.tmc.core.holders.TmcSettingsHolder;
import fi.helsinki.cs.tmc.coreimpl.TmcCoreSettingsImpl;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JDialog;

import org.openide.windows.WindowManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AllowSnapshotsDialog extends JDialog {
    
    private PreferencesPanel panel;
    private static final Logger LOG = LoggerFactory.getLogger(AllowSnapshotsDialog.class);
    private static boolean answered;
    
    public static void ask() throws InterruptedException {
        answered = false;

        LOG.info("Asking the user if they consent to collecting analytics.");
        display();
    }
    
    public static void display() {
        PreferencesPanel prefPanel;
        if (PreferencesUIFactory.getInstance().getCurrentUI() == null) {
            prefPanel = (PreferencesPanel) PreferencesUIFactory.getInstance().createCurrentPreferencesUI();
        } else {
            prefPanel = (PreferencesPanel) PreferencesUIFactory.getInstance().getCurrentUI();
        }
        
        AllowSnapshotsDialog dialog = new AllowSnapshotsDialog(prefPanel);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                if (!answered) {
                    display();
                } else {
                    new ShowSettingsAction().run();
                }
            }
        });
    }

    private AllowSnapshotsDialog(PreferencesPanel panel) {
        super(WindowManager.getDefault().getMainWindow(), false);
        initComponents();
        this.panel = panel;
    }
    
    private void setSpywareEnabledAndCloseDialog(boolean spywareEnabled) {
        this.panel.setSpywareEnabled(spywareEnabled);
        TmcCoreSettingsImpl settings = (TmcCoreSettingsImpl)TmcSettingsHolder.get();
        settings.setIsSpywareEnabled(spywareEnabled);
        answered = true;
        this.setVisible(false);
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        disagreeButton = new javax.swing.JButton();
        agreeButton = new javax.swing.JButton();
        informationScrollPane = new javax.swing.JScrollPane();
        informationTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(670, 250));

        titleLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(titleLabel, org.openide.util.NbBundle.getMessage(AllowSnapshotsDialog.class, "AllowSnapshotsDialog.titleLabel.text")); // NOI18N

        disagreeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fi/helsinki/cs/tmc/ui/cross.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(disagreeButton, org.openide.util.NbBundle.getMessage(AllowSnapshotsDialog.class, "AllowSnapshotsDialog.disagreeButton.text")); // NOI18N
        disagreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disagreeButtonActionPerformed(evt);
            }
        });

        agreeButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        agreeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fi/helsinki/cs/tmc/ui/check.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(agreeButton, org.openide.util.NbBundle.getMessage(AllowSnapshotsDialog.class, "AllowSnapshotsDialog.agreeButton.text")); // NOI18N
        agreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agreeButtonActionPerformed(evt);
            }
        });

        informationTextArea.setEditable(false);
        informationTextArea.setColumns(20);
        informationTextArea.setLineWrap(true);
        informationTextArea.setRows(5);
        informationTextArea.setText(org.openide.util.NbBundle.getMessage(AllowSnapshotsDialog.class, "AllowSnapshotsDialog.informationTextArea.text")); // NOI18N
        informationTextArea.setWrapStyleWord(true);
        informationScrollPane.setViewportView(informationTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(disagreeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                    .addComponent(agreeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(informationScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informationScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(agreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disagreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agreeButtonActionPerformed
        this.setSpywareEnabledAndCloseDialog(true);
    }//GEN-LAST:event_agreeButtonActionPerformed

    private void disagreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disagreeButtonActionPerformed
        this.setSpywareEnabledAndCloseDialog(false);
    }//GEN-LAST:event_disagreeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agreeButton;
    private javax.swing.JButton disagreeButton;
    private javax.swing.JScrollPane informationScrollPane;
    private javax.swing.JTextArea informationTextArea;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
